
plugins {
	id 'org.springframework.boot' version '2.7.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.letitgobaby'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

apply plugin: "io.spring.dependency-management"
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-jpa"

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'mysql:mysql-connector-java'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
  annotationProcessor	"jakarta.persistence:jakarta.persistence-api"
  annotationProcessor	"jakarta.annotation:jakarta.annotation-api"

	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}


/* * queryDSL 설정 추가 */ 
// querydsl에서 사용할 경로 설정 
def querydslDir = "$buildDir/generated/querydsl"

// build 시 사용할 sourceSet 추가 
sourceSets { 
	main.java.srcDir querydslDir 
} 

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}